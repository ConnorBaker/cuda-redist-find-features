name: Reusable workflow

on:
  workflow_call:
    inputs:
      os:
        description: "Operating system to run on"
        default: "ubuntu-latest"
        required: false
        type: string
      nixpkgs-commit:
        description: "Nixpkgs commit to use"
        default: ""
        required: false
        type: string

jobs:
  check:
    name: Check
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          NIX_ARGS=("flake" "check" "--print-build-logs")
          if [[ -n "${{ inputs.nixpkgs-commit }}" ]]; then
            NIX_ARGS+=("--override-input" "nixpkgs" "github:NixOS/nixpkgs/${{ inputs.nixpkgs-commit }}")
          fi
          NIX_ARGS+=(".#")
          nix "${NIX_ARGS[@]}"

  build:
    name: Build
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          NIX_ARGS=("build" "--print-build-logs")
          if [[ -n "${{ inputs.nixpkgs-commit }}" ]]; then
            NIX_ARGS+=("--override-input" "nixpkgs" "github:NixOS/nixpkgs/${{ inputs.nixpkgs-commit }}")
          fi
          NIX_ARGS+=(".#")
          nix "${NIX_ARGS[@]}"

  run-cuda-download-manifests:
    name: Download manifests for CUDA
    needs: build
    runs-on: ${{ inputs.os }}
    env:
      URL: https://developer.download.nvidia.com/compute/cuda/redist
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          NIX_ARGS=("run" "--print-build-logs")
          if [[ -n "${{ inputs.nixpkgs-commit }}" ]]; then
            NIX_ARGS+=("--override-input" "nixpkgs" "github:NixOS/nixpkgs/${{ inputs.nixpkgs-commit }}")
          fi
          NIX_ARGS+=(".#" "--" "download-manifests" "--debug" "${{ env.URL }}" "./manifests")
          nix "${NIX_ARGS[@]}"
      - uses: actions/upload-artifact@v3
        with:
          name: cuda_manifests_${{ inputs.nixpkgs-commit != '' && inputs.nixpkgs-commit || 'lock' }}
          path: ./manifests/

  run-cuda-process-manifests:
    name: Process manifest for CUDA ${{ matrix.version }}
    needs: build
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "11.8.0"
          - "12.2.2"
    env:
      URL_PREFIX: https://developer.download.nvidia.com/compute/cuda/redist
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          NIX_ARGS=("run" "--print-build-logs")
          if [[ -n "${{ inputs.nixpkgs-commit }}" ]]; then
            NIX_ARGS+=("--override-input" "nixpkgs" "github:NixOS/nixpkgs/${{ inputs.nixpkgs-commit }}")
          fi
          NIX_ARGS+=(".#" "--" "download-manifests" "--debug" "${{ env.URL_PREFIX }}" "./manifests" "--version" "${{ matrix.version }}")
          nix "${NIX_ARGS[@]}"
      - run: |
          NIX_ARGS=("run" "--print-build-logs")
          if [[ -n "${{ inputs.nixpkgs-commit }}" ]]; then
            NIX_ARGS+=("--override-input" "nixpkgs" "github:NixOS/nixpkgs/${{ inputs.nixpkgs-commit }}")
          fi
          NIX_ARGS+=(".#" "--" "process-manifests" "--debug" "${{ env.URL_PREFIX }}" "./manifests" "--cleanup")
          nix "${NIX_ARGS[@]}"
      # Collect the processed manifests in the same artifact
      - uses: actions/upload-artifact@v3
        with:
          name: cuda_manifests_processed_${{ inputs.nixpkgs-commit != '' && inputs.nixpkgs-commit || 'lock' }}
          path: ./manifests/

  run-cutensor-download-manifests:
    name: Download manifests for cuTensor
    needs: build
    runs-on: ${{ inputs.os }}
    env:
      URL: https://developer.download.nvidia.com/compute/cutensor/redist
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          NIX_ARGS=("run" "--print-build-logs")
          if [[ -n "${{ inputs.nixpkgs-commit }}" ]]; then
            NIX_ARGS+=("--override-input" "nixpkgs" "github:NixOS/nixpkgs/${{ inputs.nixpkgs-commit }}")
          fi
          NIX_ARGS+=(".#" "--" "download-manifests" "--debug" "${{ env.URL }}" "./manifests")
          nix "${NIX_ARGS[@]}"
      - uses: actions/upload-artifact@v3
        with:
          name: cutensor_manifests_${{ inputs.nixpkgs-commit != '' && inputs.nixpkgs-commit || 'lock' }}
          path: ./manifests/

  run-cutensor-process-manifests:
    name: Process manifest for cuTensor ${{ matrix.version }}
    needs: build
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.7.0"
    env:
      URL_PREFIX: https://developer.download.nvidia.com/compute/cutensor/redist
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: |
          NIX_ARGS=("run" "--print-build-logs")
          if [[ -n "${{ inputs.nixpkgs-commit }}" ]]; then
            NIX_ARGS+=("--override-input" "nixpkgs" "github:NixOS/nixpkgs/${{ inputs.nixpkgs-commit }}")
          fi
          NIX_ARGS+=(".#" "--" "download-manifests" "--debug" "${{ env.URL_PREFIX }}" "./manifests" "--version" "${{ matrix.version }}")
          nix "${NIX_ARGS[@]}"
      - run: |
          NIX_ARGS=("run" "--print-build-logs")
          if [[ -n "${{ inputs.nixpkgs-commit }}" ]]; then
            NIX_ARGS+=("--override-input" "nixpkgs" "github:NixOS/nixpkgs/${{ inputs.nixpkgs-commit }}")
          fi
          NIX_ARGS+=(".#" "--" "process-manifests" "--debug" "${{ env.URL_PREFIX }}" "./manifests" "--cleanup")
          nix "${NIX_ARGS[@]}"
      # Collect the processed manifests in the same artifact
      - uses: actions/upload-artifact@v3
        with:
          name: cutensor_manifests_processed_${{ inputs.nixpkgs-commit != '' && inputs.nixpkgs-commit || 'lock' }}
          path: ./manifests/
